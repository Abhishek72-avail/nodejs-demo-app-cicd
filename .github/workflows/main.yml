name: Node.js CI/CD Pipeline

# Triggers on push to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Environment variables that will be available to all jobs
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY: your-dockerhub-username/nodejs-demo-app

jobs:
  # Test job
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: 16
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
  
  # Build and push Docker image job
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_REPOSITORY }}:latest, ${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
    
  # Deploy job - example for deployment (can be modified for your specific deployment target)
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production
      run: echo "Deployment would happen here - replace with actual deployment commands"
      # Example: Deploy to a cloud service or server
      # This step will depend on your specific deployment requirements
